import { Database as DB } from "./supabase-types";

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

// Overwrite the autogenerated DB types to be more specific
export interface Database extends DB {
  public: {
    Tables: {
      colleges: {
        Row: {
          id: number
          name: string
          accepted_domain: string | null
        }
        Insert: {
          id?: number
          name: string
          accepted_domain?: string | null
        }
        Update: {
          id?: number
          name?: string
          accepted_domain?: string | null
        }
      },
      profiles: {
        Row: {
          id: string
          // FIX: Add created_at property which exists on the table but is missing from the type definition.
          created_at: string
          updated_at: string | null
          username: string | null
          name: string | null
          avatar_url: string | null
          college: string | null
          state: string | null
          bio: string | null
          course: string | null
          joining_year: number | null
          hobbies_interests: string | null
          linkedin_url: string | null
          twitter_url: string | null
          github_url: string | null
          is_verified: boolean
          enrollment_status: 'current_student' | 'incoming_student' | 'passed_out' | 'parent' | null
          is_banned: boolean
          profile_remark: string | null
          email: string | null
          last_seen: string | null
        }
        Insert: {
          id: string
          // FIX: Add created_at property which exists on the table but is missing from the type definition.
          created_at?: string
          updated_at?: string | null
          username?: string | null
          name?: string | null
          avatar_url?: string | null
          college?: string | null
          state?: string | null
          bio?: string | null
          course?: string | null
          joining_year?: number | null
          hobbies_interests?: string | null
          linkedin_url?: string | null
          twitter_url?: string | null
          github_url?: string | null
          is_verified?: boolean
          enrollment_status?: 'current_student' | 'incoming_student' | 'passed_out' | 'parent' | null
          is_banned?: boolean
          profile_remark?: string | null
          email?: string | null
          last_seen?: string | null
        }
        Update: {
          id?: string
          // FIX: Add created_at property which exists on the table but is missing from the type definition.
          created_at?: string
          updated_at?: string | null
          username?: string | null
          name?: string | null
          avatar_url?: string | null
          college?: string | null
          state?: string | null
          bio?: string | null
          course?: string | null
          joining_year?: number | null
          hobbies_interests?: string | null
          linkedin_url?: string | null
          twitter_url?: string | null
          github_url?: string | null
          is_verified?: boolean
          enrollment_status?: 'current_student' | 'incoming_student' | 'passed_out' | 'parent' | null
          is_banned?: boolean
          profile_remark?: string | null
          email?: string | null
          last_seen?: string | null
        }
      },
      notifications: {
        Row: {
            id: number
            created_at: string
            user_id: string
            actor_id: string | null
            type: 'new_follower' | 'new_like' | 'new_comment' | 'new_message' | 'verification_approved' | 'verification_rejected' | 'group_invite'
            entity_id: string | null
            is_read: boolean
            metadata: Json | null
        },
        Insert: {
            id?: number
            created_at?: string
            user_id: string
            actor_id?: string | null
            type: 'new_follower' | 'new_like' | 'new_comment' | 'new_message' | 'verification_approved' | 'verification_rejected' | 'group_invite'
            entity_id?: string | null
            is_read?: boolean
            metadata?: Json | null
        },
        Update: {
            id?: number
            created_at?: string
            user_id?: string
            actor_id?: string | null
            type?: 'new_follower' | 'new_like' | 'new_comment' | 'new_message' | 'verification_approved' | 'verification_rejected' | 'group_invite'
            entity_id?: string | null
            is_read?: boolean
            metadata?: Json | null
        }
      },
      study_group_invites: {
        Row: {
            id: number
            created_at: string
            group_id: number
            inviter_id: string
            invitee_id: string
            status: "pending" | "accepted" | "declined"
        }
        Insert: {
            id?: number
            created_at?: string
            group_id: number
            inviter_id: string
            invitee_id: string
            status?: "pending" | "accepted" | "declined"
        }
        Update: {
            id?: number
            created_at?: string
            group_id?: number
            inviter_id?: string
            invitee_id?: string
            status?: "pending" | "accepted" | "declined"
        }
      },
      // other tables...
    }
    Views: {
      //...
    }
    Functions: {
      //...
    }
  }
}

export type Profile = Database['public']['Tables']['profiles']['Row'];

export interface Post {
    id: number;
    created_at: string;
    content: string;
    image_url: string | null;
    user_id: string;
    community_id: number | null;
}

export interface Like {
    id: number;
    created_at: string;
    user_id: string;
    post_id: number;
}

export interface Comment {
    id: number;
    created_at: string;
    content: string;
    user_id: string;
    post_id: number;
}

export interface CommentWithProfile extends Comment {
    profiles: Profile;
}

export interface PostWithProfile extends Post {
    profiles: Profile;
    likes: Like[];
    comments: { count: number }[];
}

export type Notification = Database['public']['Tables']['notifications']['Row'];

export interface NotificationWithActor extends Notification {
    profiles: Profile | null;
}

export interface Message {
    id: number;
    created_at: string;
    sender_id: string;
    receiver_id: string;
    content: string | null;
    is_seen: boolean;
    file_url: string | null;
    file_type: string | null;
}

export interface Conversation {
    profile: Profile;
    last_message: Message;
}

export interface Follow {
    id: number;
    follower_id: string;
    following_id: string;
    created_at: string;
}

export interface Community {
    id: number;
    created_at: string;
    name: string;
    description: string | null;
    banner_url: string | null;
    creator_id: string;
    college: string | null;
    is_verified: boolean;
}

export interface CommunityWithMemberCount extends Community {
    community_member_counts: { count: number }[];
}

export interface CommunityWithCreator extends Community {
    profiles: Profile;
}

export interface CommunityMember {
    id: number;
    community_id: number;
    user_id: string;
    created_at: string;
    can_post: boolean;
}

export interface CommunityMemberWithProfile extends CommunityMember {
    profiles: Profile;
}

export interface VerificationSubmission {
    id: number;
    user_id: string;
    id_card_url: string;
    status: 'pending' | 'approved' | 'rejected';
    created_at: string;
    reviewed_at: string | null;
    reviewer_id: string | null;
    reviewer_notes: string | null;
}

export interface VerificationSubmissionWithProfile extends VerificationSubmission {
    profiles: Profile;
    reviewer: Profile | null;
}

export interface TeamMember {
    id: number;
    name: string;
    role: string;
    bio: string;
    avatar_url: string | null;
    linkedin_url: string | null;
    twitter_url: string | null;
    github_url: string | null;
}

export interface Feedback {
    id: number;
    user_id: string;
    category: 'Bug Report' | 'Feature Request' | 'General Feedback' | 'Other';
    title: string;
    description: string;
    status: 'submitted' | 'in_review' | 'resolved';
    created_at: string;
    admin_reply: string | null;
    replied_at: string | null;
    replied_by: string | null;
}

export interface FeedbackWithUser extends Feedback {
    profiles: Profile;
}

export type College = Database['public']['Tables']['colleges']['Row'];

export interface Event {
    id: number;
    created_at: string;
    name: string;
    description: string | null;
    banner_url: string | null;
    event_date: string;
    location: string;
    creator_id: string;
    college: string;
    rsvp_limit: number | null;
}

export interface EventAttendee {
    user_id: string;
    profiles: {
        id: string;
        name: string;
        avatar_url: string | null;
    };
}

export interface EventWithCreatorAndAttendees extends Event {
    profiles: Profile;
    event_attendees: EventAttendee[];
}

export interface Complaint {
    id: number;
    user_id: string;
    college: string;
    category: string;
    title: string;
    description: string;
    status: 'submitted' | 'in_review' | 'resolved';
    created_at: string;
}

export interface ComplaintWithUser extends Complaint {
    profiles: Profile;
}

export interface StudyGroup {
    id: number;
    created_at: string;
    name: string;
    description: string | null;
    college: string;
    type: 'public' | 'private';
    creator_id: string;
    avatar_url: string | null;
}

export interface StudyGroupWithMemberCount extends StudyGroup {
    study_group_members: { count: number }[];
}

export interface StudyGroupMessageWithProfile {
    id: number;
    created_at: string;
    group_id: number;
    user_id: string;
    content: string;
    profiles: Profile;
}

export type StudyGroupInvite = Database['public']['Tables']['study_group_invites']['Row'];

export interface Assignment {
    id: number;
    created_at: string;
    title: string;
    description: string;
    price: number;
    due_date: string | null;
    poster_id: string;
    assignee_id: string | null;
    college: string | null;
    status: 'open' | 'in_progress' | 'submitted' | 'completed' | 'cancelled';
    file_url: string | null;
    file_name: string | null;
    submitted_file_url: string | null;
    submitted_file_name: string | null;
    submitted_link: string | null;
    submitted_at: string | null;
}

export interface AssignmentWithPoster extends Assignment {
    profiles: Profile;
    assignee: Profile | null;
}

export interface AssignmentCollaboration {
    id: number;
    assignment_id: number;
    applicant_id: string;
    created_at: string;
}

export interface AssignmentCollaborationWithApplicant extends AssignmentCollaboration {
    profiles: Profile;
}

export interface AssignmentMessage {
    id: number;
    created_at: string;
    collaboration_id: number;
    sender_id: string;
    receiver_id: string;
    content: string;
}

export interface CollegeGroupMessage {
    id: number;
    created_at: string;
    user_id: string;
    college: string;
    content: string;
}

export interface CollegeGroupMessageWithProfile extends CollegeGroupMessage {
    profiles: Profile;
}

export interface Report {
    id: number;
    created_at: string;
    reporter_id: string;
    entity_type: 'profile' | 'post' | 'comment' | 'message';
    entity_id: string;
    reason: string;
    status: 'pending' | 'resolved';
}

export interface ReportWithReporter extends Report {
    profiles: Profile;
}

export interface CommunityFile {
    id: number;
    created_at: string;
    community_id: number;
    user_id: string;
    file_name: string;
    file_url: string;
    file_type: string;
    description: string | null;
}

export interface CommunityFileWithUploader extends CommunityFile {
    profiles: Profile;
}

export interface ReplyInfo {
    id: number;
    content: string;
    senderId: string;
    senderName: string;
}